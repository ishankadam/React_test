{"ast":null,"code":"var _jsxFileName = \"/Users/ishan/Desktop/reactTraining/foodApp/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreedIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreedIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredPostalCodeIsValid && enteredStreedIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a postal code(5 characters only)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"rLeH+PhW8wvztveFaiRGaCNWwa0=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreedIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","form","control","actions","onCancel","submit"],"sources":["/Users/ishan/Desktop/reactTraining/foodApp/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef , useState} from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\nconst Checkout = (props) => {\n    const [formInputValidity, setFormInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true,\n    });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    \n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreedIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\n\n    setFormInputsValidity({\n        name: enteredNameIsValid,\n        street: enteredStreedIsValid,\n        city: enteredCityIsValid,\n        postalCode: enteredPostalCodeIsValid\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredPostalCodeIsValid &&\n      enteredStreedIsValid &&\n      enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputValidity.name && <p>please enter a valid name</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputValidity.name && <p>please enter a valid name</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n        {!formInputValidity.postalCode && <p>please enter a postal code(5 characters only)</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputValidity.city && <p>please enter a valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}